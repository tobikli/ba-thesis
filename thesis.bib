@book{bruegge:2004:ObjectorientedSoftwareEngineering,
  title = {Object-Oriented Software Engineering: Using {{UML}}, Patterns, and {{Java}}},
  shorttitle = {Object-Oriented Software Engineering},
  author = {Bruegge, Bernd and Dutoit, Allen Henry},
  year = 2004,
  edition = {2. ed., internat. ed},
  publisher = {Pearson Prentice Hall},
  address = {Upper Saddle River, NJ},
  isbn = {978-0-13-191179-6},
  langid = {english},
  file = {/Users/tobias/Zotero/storage/AZRUUUUF/Br√ºgge et al. - 2004 - Object-oriented software engineering using UML, p.pdf}
}

@inproceedings{burns:2016:DesignPatternsContainerbased,
  title = {Design {{Patterns}} for {{Container-based Distributed Systems}}},
  booktitle = {8th {{USENIX Workshop}} on {{Hot Topics}} in {{Cloud Computing}} ({{HotCloud}} 16)},
  author = {Burns, Brendan and Oppenheimer, David},
  year = 2016,
  urldate = {2024-06-02},
  langid = {english},
  file = {/Users/tobias/Zotero/storage/JUTATQCW/Burns and Oppenheimer - 2016 - Design Patterns for Container-based Distributed Sy.pdf}
}

@article{gareis::CodeQualityAssurance,
  title = {Code Quality Assurance Using {{E2E}} Tests},
  author = {Gareis, Florian},
  journal = {Master Thesis at TUM},
  langid = {english},
  file = {/Users/tobias/Zotero/storage/RCIEIIQL/Gareis - Code quality assurance using E2E tests.pdf}
}

@article{halilaj:2025:ComparativeEvaluationEndtoEnd,
  title = {A {{Comparative Evaluation}} of {{End-to-End Testing Frameworks}} for {{Cross-Browser Web Applications}}: {{Cypress}} vs {{Playwright}}},
  author = {Halilaj, Albion and Norlin, Viktor},
  year = 2025,
  langid = {english},
  file = {/Users/tobias/Zotero/storage/BGFPXL4F/Halilaj and Norlin - A Comparative Evaluation of End-to-End Testing Frameworks for Cross-Browser Web Applications Cypres.pdf}
}

@article{hundhausen:2017:IDEBasedLearningAnalytics,
  title = {{{IDE-Based Learning Analytics}} for {{Computing Education}}: {{A Process Model}}, {{Critical Review}}, and {{Research Agenda}}},
  shorttitle = {{{IDE-Based Learning Analytics}} for {{Computing Education}}},
  author = {Hundhausen, C. D. and Olivares, D. M. and Carter, A. S.},
  year = 2017,
  month = sep,
  journal = {ACM Transactions on Computing Education},
  volume = {17},
  number = {3},
  pages = {1--26},
  issn = {1946-6226},
  doi = {10.1145/3105759},
  urldate = {2024-05-15},
  abstract = {In recent years, learning process data have become increasingly easy to collect through computer-based learning environments. This has led to increased interest in the field of               learning analytics               , which is concerned with leveraging learning process data in order to better understand, and ultimately to improve, teaching and learning. In computing education, the logical place to collect learning process data is through integrated development environments (IDEs), where computing students typically spend large amounts of time working on programming assignments. While the primary purpose of IDEs is to support computer programming, they might also be used as a mechanism for delivering learning interventions designed to enhance student learning. The possibility of using IDEs both to collect learning process data, and to strategically intervene in the learning process, suggests an exciting design space for computing education research: that of               IDE-based learning analytics               . In order to facilitate the systematic exploration of this design space, we present an IDE-based data analytics process model with four primary activities: (1)               Collect data,               (2)               Analyze data,               (3)               Design intervention,               and (4)               Deliver intervention               . For each activity, we identify key design dimensions and review relevant computing education literature. To provide guidance on designing               effective               interventions, we describe four relevant learning theories, and consider their implications for design. Based on our review, we present a call-to-action for future research into IDE-based learning analytics.},
  langid = {english},
  file = {/Users/tobias/Zotero/storage/CHCW5XCY/Hundhausen et al. - 2017 - IDE-Based Learning Analytics for Computing Educati.pdf}
}

@article{jandow:2024:ScorpioVisualStudio,
  title = {Scorpio: {{A Visual Studio Code Extension}} for {{Interactive Learning Platforms}}},
  author = {Jandow, Dennis},
  year = 2024,
  month = nov,
  journal = {Bachelor Thesis at TUM},
  langid = {english},
  file = {/Users/tobias/Zotero/storage/PZT5K2JE/Jandow - Scorpio A Visual Studio Code Extension for Intera.pdf}
}

@article{jandow:2025:DesktopWebDevelopmenta,
  title = {From {{Desktop}} to {{Web}}: {{Development}} of an {{Advanced Browser-based IDE}} for {{Education}}},
  author = {Jandow, Robert},
  year = 2025,
  month = feb,
  journal = {Master Thesis at TUM},
  langid = {english},
  file = {/Users/tobias/Zotero/storage/BKGCPNU4/Jandow - From Desktop to Web Development of an Advanced Browser-based IDE for Education.pdf}
}

@article{krasnokutska:2023:ImplementingE2ETests,
  title = {Implementing {{E2E}} Tests with {{Cypress}} and {{Page Object Model}}: Evolution of Approaches},
  author = {Krasnokutska, Inessa V and Krasnokutskyi, Oleksandr S},
  year = 2023,
  abstract = {This article shows eight approaches how to construct Cypress tests using POM. The connections between them are stressed as their evolution while writing code developing E2E tests. The authors highlight advantages and disadvantages of the approaches and offer the solution of problems. This article can be used both as a combined overview of different approaches and as a manual for those who are struggling to write tests with Cypress in a better way.},
  langid = {english},
  file = {/Users/tobias/Zotero/storage/SDYHCI2N/Krasnokutska and Krasnokutskyi - Implementing E2E tests with Cypress and Page Object Model evolution of approaches.pdf}
}

@inproceedings{krusche:2018:ArtemisAutomaticAssessment,
  title = {Artemis: {{An Automatic Assessment Management System}} for {{Interactive Learning}}},
  booktitle = {Proceedings of the 49th {{Technical Symposium}} on {{Computer Science Education}} ({{SIGCSE}})},
  author = {Krusche, Stephan and Seitz, Andreas},
  year = 2018,
  pages = {284--289},
  publisher = {ACM},
  doi = {10.1145/3159450.3159602},
  keywords = {Artemis,automated assessment,continuous integration,in-class exercises,instant feedback,interactive exercise instructions,online courses,online editor,programming exercises,version control},
  file = {/Users/tobias/Zotero/storage/8AWT7UA6/Krusche and Seitz - 2018 - ArTEMiS An Automatic Assessment Management System.pdf;/Users/tobias/Zotero/storage/8U4NT59L/Krusche and Seitz - 2018 - ArTEMiS An Automatic Assessment Management System.pdf;/Users/tobias/Zotero/storage/I4VEGELN/Krusche and Seitz - 2018 - ArTEMiS An Automatic Assessment Management System.pdf;/Users/tobias/Zotero/storage/NJXNKXI8/Krusche und Seitz - 2018 - ArTEMiS An Automatic Assessment Management System.pdf;/Users/tobias/Zotero/storage/U3RL6WQI/Krusche and Seitz - 2018 - ArTEMiS An Automatic Assessment Management System.pdf;/Users/tobias/Zotero/storage/YDKIXYHP/Krusche and Seitz - 2018 - ArTEMiS An Automatic Assessment Management System.pdf}
}

@inproceedings{leotta:2024:AIGeneratedTestScripts,
  title = {{{AI-Generated Test Scripts}} for {{Web E2E Testing}} with {{ChatGPT}} and {{Copilot}}: {{A Preliminary Study}}},
  shorttitle = {{{AI-Generated Test Scripts}} for {{Web E2E Testing}} with {{ChatGPT}} and {{Copilot}}},
  booktitle = {Proceedings of the 28th {{International Conference}} on {{Evaluation}} and {{Assessment}} in {{Software Engineering}}},
  author = {Leotta, Maurizio and Yousaf, Hafiz Zeeshan and Ricca, Filippo and Garcia, Boni},
  year = 2024,
  month = jun,
  pages = {339--344},
  publisher = {ACM},
  address = {Salerno Italy},
  doi = {10.1145/3661167.3661192},
  urldate = {2025-09-10},
  abstract = {Automated testing is vital for ensuring the reliability of web applications. This paper presents a preliminary study on leveraging artificial intelligence (AI) models, specifically ChatGPT and Github Copilot, to generate test scripts for web end-to-end testing. Through experimentation, we evaluated the feasibility and effectiveness of AI language models in generating test scripts based on natural language descriptions of user interactions with web applications.},
  isbn = {979-8-4007-1701-7},
  langid = {english},
  file = {/Users/tobias/Zotero/storage/HHSN7D6A/Leotta et al. - 2024 - AI-Generated Test Scripts for Web E2E Testing with ChatGPT and Copilot A Preliminary Study.pdf}
}

@article{lorinc:2021:ExtensionEclipseChe,
  title = {Extension of the {{Eclipse Che}} Editor for {{UI}} Testing Module},
  author = {Lorinc, Marian},
  year = 2021,
  journal = {Bachelor Thesis at VUT},
  file = {/Users/tobias/Zotero/storage/85WHHZPW/24115.pdf}
}

@article{lucas:1971:PerformanceEvaluationMonitoring,
  title = {Performance {{Evaluation}} and {{Monitoring}}},
  author = {Lucas, Henry},
  year = 1971,
  month = sep,
  journal = {ACM Computing Surveys},
  volume = {3},
  number = {3},
  pages = {79--91},
  issn = {0360-0300, 1557-7341},
  doi = {10.1145/356589.356590},
  urldate = {2025-08-28},
  abstract = {Three major purposes for evaluating the hardware and software performance of computer systems--selection evaluation, performance projection, and performance monitoring--are described. Eight techniques that have been used or suggested for evaluating performance are discussed. Each of these techniques is rated on its suitability for the three purposes of evaluation. Recommendations are made on the most appropriate technique for each evaluation purpose. These suggestions include the development of a comprehensive set of synthetic programs on an industry-wide basis for selection evaluation purposes. Simulation is recommended as the most suitable technique for performance projection. Finally, a number of hardware and software monitors are available for performance monitoring.},
  langid = {english},
  file = {/Users/tobias/Zotero/storage/PS8IL924/Lucas - 1971 - Performance Evaluation and Monitoring.pdf}
}

@inproceedings{marin:2011:TestingFutureWeb,
  title = {Towards Testing Future {{Web}} Applications},
  booktitle = {2011 {{FIFTH INTERNATIONAL CONFERENCE ON RESEARCH CHALLENGES IN INFORMATION SCIENCE}}},
  author = {Marin, Beatriz and Vos, Tanja and Giachetti, Giovanni and Baars, Arthur and Tonella, Paolo},
  year = 2011,
  month = may,
  pages = {1--12},
  publisher = {IEEE},
  address = {Gosier, France},
  doi = {10.1109/RCIS.2011.6006859},
  urldate = {2025-10-29},
  abstract = {The current Web applications are in continuous evolution to provide new and more complex functionalities, which can improve the user experience by means of adaptivity and dynamic changes. Since testing is the most frequently used technique to evaluate the quality of software applications in industry, novel testing approaches will be necessary to evaluate the quality of future (and more complex) web applications. In this paper, we investigate the testing challenges of future web applications and propose a testing methodology that addresses these challenges by the integration of searchbased testing, model-based testing, oracle learning, concurrency testing, combinatorial testing, regression testing, and coverage analysis. This paper also presents a testing metamodel that states testing concepts and their relationships, which are used as the theoretical basis of the proposed testing methodology.},
  isbn = {978-1-4244-8670-0},
  langid = {english},
  file = {/Users/tobias/Zotero/storage/ZGV95SCN/Marin et al. - 2011 - Towards testing future Web applications.pdf}
}

@article{muller:2021:FacilitatingFlexibleLearning,
  title = {Facilitating Flexible Learning by Replacing Classroom Time with an Online Learning Environment: {{A}} Systematic Review of Blended Learning in Higher Education},
  shorttitle = {Facilitating Flexible Learning by Replacing Classroom Time with an Online Learning Environment},
  author = {M{\"u}ller, Claude and Mildenberger, Thoralf},
  year = 2021,
  month = nov,
  journal = {Educational Research Review},
  volume = {34},
  pages = {100394},
  issn = {1747938X},
  doi = {10.1016/j.edurev.2021.100394},
  urldate = {2025-03-14},
  abstract = {Higher education institutions are trying to provide more flexibility and individualization, which is mainly realized through the use of new technologies and implemented in online or blended learning designs. This systematic review aims to investigate the impact of replacing classroom time with an online learning environment. The meta-analysis (k = 21 effect sizes) applied strict inclusion criteria concerning research design, measurement of learning outcomes and implementation of blended learning. The estimated effect size (Hedge's g) was positive, although not significantly different from zero and the confidence interval [-0.13, 0.25], suggesting that overall differences between blended and conventional classroom learning are small, and, at best, very small negative or moderate positive effects are plausible. This means that despite a reduction in classroom time between 30 and 79 per cent, equivalent learning outcomes were found. Consequently, blended learning with reduced classroom time is not systematically more or less effective than conventional classroom learning.},
  langid = {english},
  file = {/Users/tobias/Zotero/storage/HRKY58GI/M√ºller and Mildenberger - 2021 - Facilitating flexible learning by replacing classroom time with an online learning environment A sy.pdf}
}

@inproceedings{paul:2001:EndtoendIntegrationTesting,
  title = {End-to-End Integration Testing},
  booktitle = {Proceedings {{Second Asia-Pacific Conference}} on {{Quality Software}}},
  author = {Paul, R.},
  year = 2001,
  pages = {211--220},
  publisher = {IEEE Comput. Soc},
  address = {Hong Kong, China},
  doi = {10.1109/APAQS.2001.990022},
  urldate = {2025-03-14},
  abstract = {Testing is still the primary means for ensuring software quality. In spite of more than 20 years of research in testing, most of testing techniques still focus on module testing and white-box testing. However, in practice, integration testing and functional testing have been found to be most useful and effective. To respond to this need, DoD recently initiates a project on End-to-End (E2E) integration testing. This approach takes the functional approach to integration testing even though design and architecture information can be also incorporated into the test specification. This approach also allows risk analysis, test case/script generation, regression testing, ripple effect analysis, statistical analysis, and remote project management and collaboration via XML.},
  isbn = {978-0-7695-1287-7},
  langid = {english},
  file = {/Users/tobias/Zotero/storage/72GZR7US/Paul - 2001 - End-to-end integration testing.pdf}
}

@article{schmidt:2024:InclusiveLearningEnvironments,
  title = {Inclusive {{Learning Environments}} in the {{Cloud}}: {{Scalable Online IDEs}} for {{Higher Education}}},
  author = {Schmidt, Yannik},
  year = 2024,
  month = dec,
  journal = {Master Thesis at TUM},
  langid = {english},
  file = {/Users/tobias/Zotero/storage/MBUWIAYP/Schmidt - Inclusive Learning Environments in the Cloud Scalable Online IDEs for Higher Education.pdf}
}

@article{stowell:2010:EffectsOnlineTesting,
  title = {Effects of {{Online Testing}} on {{Student Exam Performance}} and {{Test Anxiety}}},
  author = {Stowell, Jeffrey R. and Bennett, Dan},
  year = 2010,
  month = mar,
  journal = {Journal of Educational Computing Research},
  volume = {42},
  number = {2},
  pages = {161--171},
  issn = {0735-6331, 1541-4140},
  doi = {10.2190/EC.42.2.b},
  urldate = {2025-08-28},
  abstract = {Increased use of course management software to administer course exams online for face-to-face classes raises the question of how well test anxiety and other emotions generalize from the classroom to an online setting. We hypothesized that administering regular course exams in an online format would reduce test anxiety experienced at the time of the exam and improve exam scores. We recruited 69 participants from a psychology course to take classroom- and online-delivered exams, using a counterbalanced crossover design. We found that students who normally experience high levels of test anxiety in the classroom had reduced test anxiety when taking online exams, while the reverse was true for those low in classroom anxiety. Furthermore, the relationship between test anxiety and exam performance was weaker in an online setting than in the classroom. We recommend that instructors evaluate the potential impact of these findings when considering offering examinations online.},
  copyright = {https://journals.sagepub.com/page/policies/text-and-data-mining-license},
  langid = {english},
  file = {/Users/tobias/Zotero/storage/B97YDHVG/Stowell and Bennett - 2010 - Effects of Online Testing on Student Exam Performance and Test Anxiety.pdf}
}

@article{talibov:2024:ImprovingStabilityWeb,
  title = {Improving {{Stability}} of {{Web Applications}} by {{Optimized E2E Testing}}},
  author = {Talibov, Murad},
  year = 2024,
  month = jun,
  journal = {Master Thesis at TUM},
  langid = {english},
  file = {/Users/tobias/Zotero/storage/VDM658AC/Talibov - Improving Stability of Web Applications by Optimized E2E Testing.pdf}
}

@misc{tan:2023:VisualStudioCode,
  title = {Visual {{Studio Code}} in {{Introductory Computer Science Course}}: {{An Experience Report}}},
  shorttitle = {Visual {{Studio Code}} in {{Introductory Computer Science Course}}},
  author = {Tan, Jialiang and Chen, Yu and Jiao, Shuyin},
  year = 2023,
  month = mar,
  number = {arXiv:2303.10174},
  eprint = {2303.10174},
  primaryclass = {cs},
  publisher = {arXiv},
  urldate = {2024-07-02},
  abstract = {Involving integrated development environments (IDEs) in introductorylevel (CS1) programming courses is critical. However, it is difficult for instructors to find a suitable IDE that is beginner friendly and supports strong functionality. In this paper, we report the experience of using Visual Studio Code (VS Code) in a CS1 programming course. We describe our motivation for choosing VS Code and how we introduce it to students. We create comprehensive guidance with hierarchical indexing to help students with diverse programming backgrounds. We perform an experimental evaluation of students' programming experience of using VS Code and validate the VS Code together with guidance as a promising solution for CS1 programming courses.},
  archiveprefix = {arXiv},
  langid = {english},
  keywords = {Computer Science - Human-Computer Interaction,Computer Science - Programming Languages},
  file = {/Users/tobias/Zotero/storage/LWY84YSE/Tan et al. - 2023 - Visual Studio Code in Introductory Computer Science Course An Experience Report.pdf}
}

@inproceedings{tsai:2011:TestingScalabilitySaaS,
  title = {Testing the Scalability of {{SaaS}} Applications},
  booktitle = {2011 {{IEEE International Conference}} on {{Service-Oriented Computing}} and {{Applications}} ({{SOCA}})},
  author = {Tsai, Wei-Tek and Huang, Yu and Shao, Qihong},
  year = 2011,
  month = dec,
  pages = {1--4},
  publisher = {IEEE},
  address = {Irvine, CA, USA},
  doi = {10.1109/SOCA.2011.6166245},
  urldate = {2025-06-27},
  abstract = {Cloud computing and SaaS (Software-as-aService) received significant attention recently. Testing SaaS applications is important because many mission-critical applications will be deployed on the cloud. However, to the best of our knowledge, testing framework designed specifically for SaaS applications is not developed. The issue of testing the scalability of SaaS applications remains untouched. This paper discusses the unique features and challenges in testing SaaS applications, and proposes scalability metrics that can be used to test the scalability of SaaS applications.},
  isbn = {978-1-4673-0319-4 978-1-4673-0318-7 978-1-4673-0317-0},
  langid = {english},
  file = {/Users/tobias/Zotero/storage/5F5S8I4B/Tsai et al. - 2011 - Testing the scalability of SaaS applications.pdf}
}

@article{turdiu:2020:OnlineExamsArtemis,
  title = {Online {{Exams}} in {{Artemis}}},
  author = {Turdiu, Andi},
  year = 2020,
  month = nov,
  journal = {Master Thesis at TUM},
  langid = {english},
  file = {/Users/tobias/Zotero/storage/G8XGGQDS/Artemis AT Online Exams.pdf}
}

@article{ungar:2020:DevelopmentIDEPlugin,
  title = {Development of an {{IDE Plugin}} for {{ArTEMiS}}},
  author = {Ungar, Alexander},
  year = 2020,
  month = feb,
  journal = {Master Thesis at TUM},
  langid = {english},
  file = {/Users/tobias/Zotero/storage/JWPLW8KW/Ungar - Development of an IDE Plugin for ArTEMiS.pdf}
}

@article{wang:2024:SoftwareTestingLarge,
  title = {Software {{Testing With Large Language Models}}: {{Survey}}, {{Landscape}}, and {{Vision}}},
  shorttitle = {Software {{Testing With Large Language Models}}},
  author = {Wang, Junjie and Huang, Yuchao and Chen, Chunyang and Liu, Zhe and Wang, Song and Wang, Qing},
  year = 2024,
  month = apr,
  journal = {IEEE Transactions on Software Engineering},
  volume = {50},
  number = {4},
  pages = {911--936},
  issn = {0098-5589, 1939-3520, 2326-3881},
  doi = {10.1109/TSE.2024.3368208},
  urldate = {2025-10-28},
  abstract = {Pre-trained large language models (LLMs) have recently emerged as a breakthrough technology in natural language processing and artificial intelligence, with the ability to handle large-scale datasets and exhibit remarkable performance across a wide range of tasks. Meanwhile, software testing is a crucial undertaking that serves as a cornerstone for ensuring the quality and reliability of software products. As the scope and complexity of software systems continue to grow, the need for more effective software testing techniques becomes increasingly urgent, making it an area ripe for innovative approaches such as the use of LLMs. This paper provides a comprehensive review of the utilization of LLMs in software testing. It analyzes 102 relevant studies that have used LLMs for software testing, from both the software testing and LLMs perspectives. The paper presents a detailed discussion of the software testing tasks for which LLMs are commonly used, among which test case preparation and program repair are the most representative. It also analyzes the commonly used LLMs, the types of prompt engineering that are employed, as well as the accompanied techniques with these LLMs. It also summarizes the key challenges and potential opportunities in this direction. This work can serve as a roadmap for future research in this area, highlighting potential avenues for exploration, and identifying gaps in our current understanding of the use of LLMs in software testing.},
  copyright = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html},
  langid = {english},
  file = {/Users/tobias/Zotero/storage/CSP97KE2/Wang et al. - 2024 - Software Testing With Large Language Models Survey, Landscape, and Vision.pdf}
}

@inproceedings{wu:2011:CEclipseOnlineIDE,
  title = {{{CEclipse}}: {{An Online IDE}} for {{Programing}} in the {{Cloud}}},
  shorttitle = {{{CEclipse}}},
  booktitle = {2011 {{IEEE World Congress}} on {{Services}}},
  author = {Wu, Ling and Liang, Guangtai and Kui, Shi and Wang, Qianxiang},
  year = 2011,
  month = jul,
  pages = {45--52},
  publisher = {IEEE},
  address = {Washington, DC, USA},
  doi = {10.1109/SERVICES.2011.74},
  urldate = {2024-10-30},
  abstract = {Due to the benefits of cloud computing, many desktop applications have been migrated into the cloud. In order to program in the cloud, lots of IDEs are also moved into the cloud at recent years. Although online IDE can bring developers a lot of convenience for their developing process, some tough problems are still less touched. This paper summarized three main kinds of actual problems from three aspects (Function implementation, Security guarantee, Advanced utilization) encountered when using the online IDE, and proposed three solutions (Services composition, Program behavior analysis, Program behavior mining) to handle these according problems. Finally, this paper introduce a real online IDE (CEclipse) developed by our research group and apply the three solutions in this online IDE.},
  isbn = {978-1-4577-0879-4},
  langid = {english},
  file = {/Users/tobias/Zotero/storage/ULXRRUPM/Wu et al. - 2011 - CEclipse An Online IDE for Programing in the Cloud.pdf}
}

@article{zander:2024:DevelopingImprovedCode,
  title = {Developing an {{Improved Code Editor}} for {{Learning Platforms}}},
  author = {Zander, Patrik},
  year = 2024,
  month = sep,
  journal = {Master Thesis at TUM},
  langid = {english},
  file = {/Users/tobias/Zotero/storage/T3YBVS57/Zander - Developing an Improved Code Editor for Learning Pl.pdf}
}
