@book{bruegge:2004:ObjectorientedSoftwareEngineering,
  title = {Object-Oriented Software Engineering: Using {{UML}}, Patterns, and {{Java}}},
  shorttitle = {Object-Oriented Software Engineering},
  author = {Bruegge, Bernd and Dutoit, Allen Henry},
  year = {2004},
  edition = {2. ed., internat. ed},
  publisher = {Pearson Prentice Hall},
  address = {Upper Saddle River, NJ},
  isbn = {978-0-13-191179-6},
  langid = {english},
  file = {/Users/tobias/Zotero/storage/AZRUUUUF/Brügge et al. - 2004 - Object-oriented software engineering using UML, p.pdf}
}

@inproceedings{burns:2016:DesignPatternsContainerbased,
  title = {Design {{Patterns}} for {{Container-based Distributed Systems}}},
  booktitle = {8th {{USENIX Workshop}} on {{Hot Topics}} in {{Cloud Computing}} ({{HotCloud}} 16)},
  author = {Burns, Brendan and Oppenheimer, David},
  year = {2016},
  urldate = {2024-06-02},
  langid = {english},
  file = {/Users/tobias/Zotero/storage/JUTATQCW/Burns and Oppenheimer - 2016 - Design Patterns for Container-based Distributed Sy.pdf}
}

@article{hundhausen:2017:IDEBasedLearningAnalytics,
  title = {{{IDE-Based Learning Analytics}} for {{Computing Education}}: {{A Process Model}}, {{Critical Review}}, and {{Research Agenda}}},
  shorttitle = {{{IDE-Based Learning Analytics}} for {{Computing Education}}},
  author = {Hundhausen, C. D. and Olivares, D. M. and Carter, A. S.},
  year = {2017},
  month = sep,
  journal = {ACM Transactions on Computing Education},
  volume = {17},
  number = {3},
  pages = {1--26},
  issn = {1946-6226},
  doi = {10.1145/3105759},
  urldate = {2024-05-15},
  abstract = {In recent years, learning process data have become increasingly easy to collect through computer-based learning environments. This has led to increased interest in the field of               learning analytics               , which is concerned with leveraging learning process data in order to better understand, and ultimately to improve, teaching and learning. In computing education, the logical place to collect learning process data is through integrated development environments (IDEs), where computing students typically spend large amounts of time working on programming assignments. While the primary purpose of IDEs is to support computer programming, they might also be used as a mechanism for delivering learning interventions designed to enhance student learning. The possibility of using IDEs both to collect learning process data, and to strategically intervene in the learning process, suggests an exciting design space for computing education research: that of               IDE-based learning analytics               . In order to facilitate the systematic exploration of this design space, we present an IDE-based data analytics process model with four primary activities: (1)               Collect data,               (2)               Analyze data,               (3)               Design intervention,               and (4)               Deliver intervention               . For each activity, we identify key design dimensions and review relevant computing education literature. To provide guidance on designing               effective               interventions, we describe four relevant learning theories, and consider their implications for design. Based on our review, we present a call-to-action for future research into IDE-based learning analytics.},
  langid = {english},
  file = {/Users/tobias/Zotero/storage/CHCW5XCY/Hundhausen et al. - 2017 - IDE-Based Learning Analytics for Computing Educati.pdf}
}

@article{jandow:2024:ScorpioVisualStudio,
  title = {Scorpio: {{A Visual Studio Code Extension}} for {{Interactive Learning Platforms}}},
  author = {Jandow, Dennis},
  year = {2024},
  month = jan,
  journal = {Bachelor Thesis at TUM},
  langid = {english},
  file = {/Users/tobias/Zotero/storage/PZT5K2JE/Jandow - Scorpio A Visual Studio Code Extension for Intera.pdf}
}

@inproceedings{krusche:2018:ArTEMiSAutomaticAssessment,
  title = {{{ArTEMiS}}: {{An Automatic Assessment Management System}} for {{Interactive Learning}}},
  shorttitle = {{{ArTEMiS}}},
  booktitle = {Proceedings of the 49th {{ACM Technical Symposium}} on {{Computer Science Education}}},
  author = {Krusche, Stephan and Seitz, Andreas},
  year = {2018},
  month = feb,
  pages = {284--289},
  publisher = {ACM},
  address = {Baltimore Maryland USA},
  doi = {10.1145/3159450.3159602},
  urldate = {2024-05-15},
  abstract = {The increasing number of students in computer science courses leads to high efforts in manual assessment of exercises. Existing assessment systems are not designed for exercises with immediate feedback in large classes. In this paper, we present an AuTomated assEssment Management System for interactive learning.},
  isbn = {978-1-4503-5103-4},
  langid = {english},
  file = {/Users/tobias/Zotero/storage/8AWT7UA6/Krusche and Seitz - 2018 - ArTEMiS An Automatic Assessment Management System.pdf}
}

@article{muller:2021:FacilitatingFlexibleLearning,
  title = {Facilitating Flexible Learning by Replacing Classroom Time with an Online Learning Environment: {{A}} Systematic Review of Blended Learning in Higher Education},
  shorttitle = {Facilitating Flexible Learning by Replacing Classroom Time with an Online Learning Environment},
  author = {M{\"u}ller, Claude and Mildenberger, Thoralf},
  year = {2021},
  month = nov,
  journal = {Educational Research Review},
  volume = {34},
  pages = {100394},
  issn = {1747938X},
  doi = {10.1016/j.edurev.2021.100394},
  urldate = {2025-03-14},
  abstract = {Higher education institutions are trying to provide more flexibility and individualization, which is mainly realized through the use of new technologies and implemented in online or blended learning designs. This systematic review aims to investigate the impact of replacing classroom time with an online learning environment. The meta-analysis (k = 21 effect sizes) applied strict inclusion criteria concerning research design, measurement of learning outcomes and implementation of blended learning. The estimated effect size (Hedge's g) was positive, although not significantly different from zero and the confidence interval [-0.13, 0.25], suggesting that overall differences between blended and conventional classroom learning are small, and, at best, very small negative or moderate positive effects are plausible. This means that despite a reduction in classroom time between 30 and 79 per cent, equivalent learning outcomes were found. Consequently, blended learning with reduced classroom time is not systematically more or less effective than conventional classroom learning.},
  langid = {english},
  file = {/Users/tobias/Zotero/storage/HRKY58GI/Müller and Mildenberger - 2021 - Facilitating flexible learning by replacing classroom time with an online learning environment A sy.pdf}
}

@inproceedings{paul:2001:EndtoendIntegrationTesting,
  title = {End-to-End Integration Testing},
  booktitle = {Proceedings {{Second Asia-Pacific Conference}} on {{Quality Software}}},
  author = {Paul, R.},
  year = {2001},
  pages = {211--220},
  publisher = {IEEE Comput. Soc},
  address = {Hong Kong, China},
  doi = {10.1109/APAQS.2001.990022},
  urldate = {2025-03-14},
  abstract = {Testing is still the primary means for ensuring software quality. In spite of more than 20 years of research in testing, most of testing techniques still focus on module testing and white-box testing. However, in practice, integration testing and functional testing have been found to be most useful and effective. To respond to this need, DoD recently initiates a project on End-to-End (E2E) integration testing. This approach takes the functional approach to integration testing even though design and architecture information can be also incorporated into the test specification. This approach also allows risk analysis, test case/script generation, regression testing, ripple effect analysis, statistical analysis, and remote project management and collaboration via XML.},
  isbn = {978-0-7695-1287-7},
  langid = {english},
  file = {/Users/tobias/Zotero/storage/72GZR7US/Paul - 2001 - End-to-end integration testing.pdf}
}

@article{schmidt:2024:InclusiveLearningEnvironments,
  title = {Inclusive {{Learning Environments}} in the {{Cloud}}: {{Scalable Online IDEs}} for {{Higher Education}}},
  author = {Schmidt, Yannik},
  year = {2024},
  journal = {Master Thesis at TUM},
  langid = {english},
  file = {/Users/tobias/Zotero/storage/EFL5JMAM/Schmidt - Inclusive Learning Environments in the Cloud Scalable Online IDEs for Higher Education.pdf}
}

@misc{tan:2023:VisualStudioCode,
  title = {Visual {{Studio Code}} in {{Introductory Computer Science Course}}: {{An Experience Report}}},
  shorttitle = {Visual {{Studio Code}} in {{Introductory Computer Science Course}}},
  author = {Tan, Jialiang and Chen, Yu and Jiao, Shuyin},
  year = {2023},
  month = mar,
  number = {arXiv:2303.10174},
  eprint = {2303.10174},
  primaryclass = {cs},
  publisher = {arXiv},
  urldate = {2024-07-02},
  abstract = {Involving integrated development environments (IDEs) in introductorylevel (CS1) programming courses is critical. However, it is difficult for instructors to find a suitable IDE that is beginner friendly and supports strong functionality. In this paper, we report the experience of using Visual Studio Code (VS Code) in a CS1 programming course. We describe our motivation for choosing VS Code and how we introduce it to students. We create comprehensive guidance with hierarchical indexing to help students with diverse programming backgrounds. We perform an experimental evaluation of students' programming experience of using VS Code and validate the VS Code together with guidance as a promising solution for CS1 programming courses.},
  archiveprefix = {arXiv},
  langid = {english},
  keywords = {Computer Science - Human-Computer Interaction,Computer Science - Programming Languages},
  file = {/Users/tobias/Zotero/storage/LWY84YSE/Tan et al. - 2023 - Visual Studio Code in Introductory Computer Science Course An Experience Report.pdf}
}

@inproceedings{tsai:2011:TestingScalabilitySaaS,
  title = {Testing the Scalability of {{SaaS}} Applications},
  booktitle = {2011 {{IEEE International Conference}} on {{Service-Oriented Computing}} and {{Applications}} ({{SOCA}})},
  author = {Tsai, Wei-Tek and Huang, Yu and Shao, Qihong},
  year = {2011},
  month = dec,
  pages = {1--4},
  publisher = {IEEE},
  address = {Irvine, CA, USA},
  doi = {10.1109/SOCA.2011.6166245},
  urldate = {2025-06-27},
  abstract = {Cloud computing and SaaS (Software-as-aService) received significant attention recently. Testing SaaS applications is important because many mission-critical applications will be deployed on the cloud. However, to the best of our knowledge, testing framework designed specifically for SaaS applications is not developed. The issue of testing the scalability of SaaS applications remains untouched. This paper discusses the unique features and challenges in testing SaaS applications, and proposes scalability metrics that can be used to test the scalability of SaaS applications.},
  isbn = {978-1-4673-0319-4 978-1-4673-0318-7 978-1-4673-0317-0},
  langid = {english},
  file = {/Users/tobias/Zotero/storage/5F5S8I4B/Tsai et al. - 2011 - Testing the scalability of SaaS applications.pdf}
}

@article{turdiu:2020:OnlineExamsArtemis,
  title = {Online {{Exams}} in {{Artemis}}},
  author = {Turdiu, Andi},
  year = {2020},
  month = nov,
  journal = {Master Thesis at TUM},
  langid = {english},
  file = {/Users/tobias/Zotero/storage/G8XGGQDS/Artemis AT Online Exams.pdf}
}

@article{ungar:2020:DevelopmentIDEPlugin,
  title = {Development of an {{IDE Plugin}} for {{ArTEMiS}}},
  author = {Ungar, Alexander},
  year = {2020},
  month = feb,
  journal = {Master Thesis at TUM},
  langid = {english},
  file = {/Users/tobias/Zotero/storage/JWPLW8KW/Ungar - Development of an IDE Plugin for ArTEMiS.pdf}
}

@inproceedings{wu:2011:CEclipseOnlineIDE,
  title = {{{CEclipse}}: {{An Online IDE}} for {{Programing}} in the {{Cloud}}},
  shorttitle = {{{CEclipse}}},
  booktitle = {2011 {{IEEE World Congress}} on {{Services}}},
  author = {Wu, Ling and Liang, Guangtai and Kui, Shi and Wang, Qianxiang},
  year = {2011},
  month = jul,
  pages = {45--52},
  publisher = {IEEE},
  address = {Washington, DC, USA},
  doi = {10.1109/SERVICES.2011.74},
  urldate = {2025-03-10},
  abstract = {Due to the benefits of cloud computing, many desktop applications have been migrated into the cloud. In order to program in the cloud, lots of IDEs are also moved into the cloud at recent years. Although online IDE can bring developers a lot of convenience for their developing process, some tough problems are still less touched. This paper summarized three main kinds of actual problems from three aspects (Function implementation, Security guarantee, Advanced utilization) encountered when using the online IDE, and proposed three solutions (Services composition, Program behavior analysis, Program behavior mining) to handle these according problems. Finally, this paper introduce a real online IDE (CEclipse) developed by our research group and apply the three solutions in this online IDE.},
  isbn = {978-1-4577-0879-4},
  langid = {english},
  file = {/Users/tobias/Zotero/storage/NHVX5YAX/Wu et al. - 2011 - CEclipse An Online IDE for Programing in the Cloud.pdf}
}

@article{zander:2024:DevelopingImprovedCode,
  title = {Developing an {{Improved Code Editor}} for {{Learning Platforms}}},
  author = {Zander, Patrik},
  year = {2024},
  month = sep,
  journal = {Master Thesis at TUM},
  langid = {english},
  file = {/Users/tobias/Zotero/storage/T3YBVS57/Zander - Developing an Improved Code Editor for Learning Pl.pdf}
}
